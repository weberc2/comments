on: push
jobs:
  tests:
    # Based on
    # https://remarkablemark.org/blog/2021/03/14/setup-postgresql-in-github-actions/
    #
    # containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `postgres-job` executes in
    container: golang:1.17.5

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.1
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: postgres
          # required
          POSTGRES_PASSWORD: password
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.3

      # Based on https://github.com/golangci/golangci-lint-action#how-to-use
      - name: golangci-lint
          uses: golangci/golangci-lint-action@v2
          with:
            # Optional: version of golangci-lint to use in form of v1.2 or
            # v1.2.3 or `latest` to use the latest version
            version: v1.29

            # Optional: working directory, useful for monorepos
            # working-directory: somedir

            # Optional: golangci-lint command line arguments.
            # args: --issues-exit-code=0

            # Optional: show only new issues if it's a pull request. The
            # default value is `false`.
            # only-new-issues: true

            # Optional: if set to true then the action will use pre-installed
            # Go.
            skip-go-installation: true

            # Optional: if set to true then the action don't cache or restore
            # ~/go/pkg.
            # skip-pkg-cache: true

            # Optional: if set to true then the action don't cache or restore
            # ~/.cache/go-build.
            # skip-build-cache: true
      - name: Test
        id: test
        run: go test -v ./...
        env:
          PG_PASS: password
          PG_USER: postgres
          PG_DB_NAME: postgres
          PG_PORT: 5432
          PG_HOST: postgres
      - name: Build
        id: build
        run: go build ./...
